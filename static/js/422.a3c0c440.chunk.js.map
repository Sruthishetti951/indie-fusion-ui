{"version":3,"file":"static/js/422.a3c0c440.chunk.js","mappings":"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","sources":["Utils/utils.jsx","webpack://indie-fusion-ui/./src/pages/post-login/Notifications/Notifications.module.css?eca1","pages/post-login/Notifications/Notifications.jsx","webpack://indie-fusion-ui/./src/shared/components/LoadingIndicator/LoadingIndicator.module.css?ca50","shared/components/LoadingIndicator/LoadingIndicator.jsx","shared/components/NodataFound/NoDataFound.jsx","webpack://indie-fusion-ui/./src/shared/components/title/Title.module.css?b1fc","shared/components/title/Title.jsx"],"sourcesContent":["import { Bounce, toast } from \"react-toastify\";\n\nexport const VIDEO_FORMATS = ['mp4', 'mov'];\n\nexport const getIsImageFormat = (fileName) => {\n    const spilltedFileName = fileName?.split('.');\n    const fileFormat = spilltedFileName[spilltedFileName.length - 1];\n    return !VIDEO_FORMATS.includes(fileFormat?.toLowerCase());\n}\n\n\nexport const openToast = (message, isError = true) => {\n    toast[isError ? 'error' : 'success'](message, {\n        position: \"top-right\",\n        autoClose: 10000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"dark\",\n        transition: Bounce,\n    });\n}\n\nexport const NOTIFICATION_TYPES = {\n    GROUP: 'GROUP',\n    COLLAB: 'COLLAB'\n}\n\nexport const STATUS = {\n    APPROVED: \"APPROVED\",\n    REQUESTED: \"REQUESTED\",\n    REJECTED: \"REJECTED\"\n}\n\nexport const POST_TYPES = {\n    SELF: \"SELF\",\n    EVENT: \"EVENT\",\n    COLLAB: \"COLLAB\"\n}\n\n// If the post is not created by current user\nexport const getMemberFromMembers = (members) => {\n    const userId = localStorage.getItem(\"USER_ID\");\n    return members?.find((obj) => userId === obj.userId);\n}\n\nexport const capitalizeParagraph = (paragraph) => {\n    const sentences = paragraph.split(/([.!?])\\s*/);\n\n    const capitalizedSentences = sentences.map((sentence, index) => {\n        if (index % 2 === 0) {\n            return sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase();\n        }\n        return sentence;\n    });\n\n    return capitalizedSentences.join('');\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Notifications_container__vfNdU\",\"main-Card\":\"Notifications_main-Card__FV+aY\",\"card-items\":\"Notifications_card-items__T5DKL\",\"fafa-icon-size\":\"Notifications_fafa-icon-size__lj0Gt\",\"card-gap\":\"Notifications_card-gap__rUWVy\",\"p-margin\":\"Notifications_p-margin__agc40\",\"unread\":\"Notifications_unread__rKc+i\",\"loading-container\":\"Notifications_loading-container__B+ry6\",\"indicator\":\"Notifications_indicator__7dp7m\",\"date\":\"Notifications_date__CcWxQ\",\"profile-img\":\"Notifications_profile-img__oFAqw\"};","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './Notifications.module.css';\nimport axios from 'axios';\nimport { API_URL } from '../../../appConfig';\nimport { capitalizeParagraph, NOTIFICATION_TYPES, openToast } from '../../../Utils/utils';\nimport { useNavigate } from 'react-router-dom';\nimport Title from '../../../shared/components/title/Title';\nimport LoadingIndicator from '../../../shared/components/LoadingIndicator/LoadingIndicator';\nimport NoDataFound from '../../../shared/components/NodataFound/NoDataFound';\nconst deafultProfileImage = '/Images/DefaultProfileImage.webp';\n\nfunction Notifications() {\n\n    const [notifications, setNotifications] = useState({\n        loading: false,\n        data: []\n    });\n\n    const navigate = useNavigate();\n\n    const fetchNotifications = useCallback(() => {\n        setNotifications({\n            loading: true,\n            data: null\n        });\n        const userID = localStorage.getItem('USER_ID');\n        axios.get(`${API_URL}/notifications/${userID}`).then((res) => {\n            if (res.data) {\n                setNotifications({\n                    loading: false,\n                    data: res.data?.data,\n                });\n            } else {\n                setNotifications({\n                    loading: false,\n                    data: null\n                });\n                openToast(\"Unable to fetch Groups... Please try again ...\");\n            }\n        }).catch(() => {\n            openToast(\"Unable to fetch Groups... Please try again ...\")\n        })\n    }, []);\n\n    const notificationUpdateStatus = useCallback((notificationId) => {\n        // Silent api\n        const userID = localStorage.getItem('USER_ID');\n        axios.put(`${API_URL}/notifications/${userID}/${notificationId}`).then((res) => {\n        }).catch(() => {\n        })\n    }, []);\n\n    useEffect(() => {\n        fetchNotifications()\n    }, [fetchNotifications]);\n\n    const navigateToExternalPage = useCallback((eachNotification) => {\n        notificationUpdateStatus(eachNotification._id);\n        if (eachNotification.notificationType === NOTIFICATION_TYPES.GROUP) {\n            navigate(`/groups/${eachNotification?.externalId}`);\n        } else {\n            navigate(`/profile/${eachNotification?.notificationFrom}`);\n        }\n    }, [navigate, notificationUpdateStatus]);\n\n    const notificationsList = useMemo(() => {\n        return notifications?.data?.map((eachNotification) => {\n            return <div className={`${styles[\"main-Card\"]} ${styles[\"card-items\"]} ${!eachNotification.isRead && styles[\"unread\"]}`} key={eachNotification._id} role='button' onClick={() => navigateToExternalPage(eachNotification)}>\n\n                {eachNotification?.notificationType === NOTIFICATION_TYPES.GROUP && <div>\n                    <i className={`fa fa-users ${styles[\"fafa-icon-size\"]}`} aria-hidden=\"true\" ></i>\n                </div>}\n                {eachNotification?.notificationType === NOTIFICATION_TYPES.COLLAB && <div>\n                    <img src={eachNotification?.fromUserProfileImage?.imageUrl ? `${API_URL}/${eachNotification?.fromUserProfileImage?.imageUrl}` : deafultProfileImage} alt=\"Profile Not found\" className={`${styles[\"profile-img\"]} ${styles[\"mg-right\"]}`} />\n                </div>}\n                <div>\n                    <p className={`${styles[\"p-margin\"]}`}>\n                        <span className='fw-bold'>{capitalizeParagraph(`${eachNotification?.fromUserDetails?.firstName} ${eachNotification?.fromUserDetails?.lastName}`)}</span>&nbsp;\n                        <span>{`${eachNotification?.message}`}</span>\n                    </p>\n                    <p className={`${styles[\"p-margin\"]} ${styles[\"date\"]}`}>{`${eachNotification?.createdDate ? new Date(eachNotification?.createdDate).toDateString() : null}`}</p>\n                </div>\n            </div>\n        })\n    }, [navigateToExternalPage, notifications?.data]);\n\n    const notificationLoading = useMemo(() => {\n        return <LoadingIndicator/>\n    }, []);\n\n    const noPostsFound = useMemo(() => {\n        return <NoDataFound/>\n    }, []);\n\n    return (\n        <div className={`${styles[\"container\"]}`}>\n            <div>\n                <div className={`${styles[\"card-gap\"]}`}>\n                    <div>\n                        <Title heading=\"Notifications\" />\n                    </div>\n                    {notifications?.loading && notificationLoading}\n                    {(!notifications?.loading &&  notifications?.data?.length <= 0) && noPostsFound}\n                    {notifications?.data?.length > 0 ? notificationsList : null}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Notifications","// extracted by mini-css-extract-plugin\nexport default {\"loading-container\":\"LoadingIndicator_loading-container__u+u1Y\",\"indicator\":\"LoadingIndicator_indicator__Y5uSo\"};","import React from 'react';\nimport styles from './LoadingIndicator.module.css';\n\nfunction LoadingIndicator() {\n  return (\n    <div className={`${styles[\"loading-container\"]}`}>\n            <div className={`spinner-border text-primary ${styles[\"indicator\"]}`} role=\"status\" >\n                <span className=\"sr-only\"></span>\n            </div>\n        </div>\n  )\n}\n\nexport default LoadingIndicator","import React from 'react';\nconst noPost = '/Images/NoDataFoundImage.jpg';\n\nfunction NoDataFound() {\n  return (\n    <div className={'d-flex align-items-center flex-column pt-4'}>\n            <div>\n                <img src={noPost} alt='No Post Found' />\n            </div>\n        </div>\n  )\n}\n\nexport default NoDataFound","// extracted by mini-css-extract-plugin\nexport default {\"heading-font\":\"Title_heading-font__UosSp\"};","import React from 'react';\nimport styles from './Title.module.css'\n\nfunction Title(props) {\n  return (\n    <div className={`${styles[\"heading-font\"]}`}>{props.heading}</div>\n  )\n}\n\nexport default Title"],"names":["VIDEO_FORMATS","getIsImageFormat","fileName","spilltedFileName","split","fileFormat","length","includes","toLowerCase","openToast","message","isError","arguments","undefined","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","transition","Bounce","NOTIFICATION_TYPES","GROUP","COLLAB","STATUS","APPROVED","REQUESTED","REJECTED","POST_TYPES","SELF","EVENT","capitalizeParagraph","paragraph","map","sentence","index","charAt","toUpperCase","slice","join","_notifications$data2","_notifications$data3","notifications","setNotifications","useState","loading","data","navigate","useNavigate","fetchNotifications","useCallback","userID","localStorage","getItem","axios","get","API_URL","then","res","_res$data","catch","notificationUpdateStatus","notificationId","put","useEffect","navigateToExternalPage","eachNotification","_id","notificationType","externalId","notificationFrom","notificationsList","useMemo","_notifications$data","_eachNotification$fro","_eachNotification$fro2","_eachNotification$fro3","_eachNotification$fro4","_jsxs","className","styles","isRead","role","onClick","children","_jsx","src","fromUserProfileImage","imageUrl","alt","fromUserDetails","firstName","lastName","createdDate","Date","toDateString","notificationLoading","LoadingIndicator","noPostsFound","NoDataFound","Title","heading","props"],"sourceRoot":""}