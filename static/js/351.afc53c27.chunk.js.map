{"version":3,"file":"static/js/351.afc53c27.chunk.js","mappings":"+IAAA,MAsBA,EAtB0BA,IAA6H,IAA5H,KAAEC,EAAI,YAAEC,EAAW,MAAEC,EAAK,SAAEC,EAAQ,aAAEC,EAAY,YAAEC,EAAc,KAAI,WAAEC,EAAa,SAAQ,cAAEC,GAAgB,GAAOR,EAC/I,OACES,EAAAA,EAAAA,KAAA,OAAKC,UAAW,eAAcT,EAAO,eAAiB,IAAMU,SAAS,KAAKC,MAAO,CAAEC,gBAAiB,mBAAoBT,UACtHK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCN,UACjDU,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gBAAeN,SAAA,EAC5BK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcN,UAC3BK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaN,SAAED,OAE/BM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYN,SACxBA,KAEHU,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,eAAcN,SAAA,EAC3BK,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASL,UAAU,oBAAoBM,QAASd,EAAYE,SAAEG,KAC3EE,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASL,UAAU,kBAAkBM,QAASX,EAAcY,SAAUT,EAAcJ,SAAEE,aAKrG,C,6DCjBV,SAAgB,cAAgB,iCAAiC,WAAW,4BAA4B,cAAc,+BAA+B,iBAAiB,kCAAkC,QAAU,2BAA2B,WAAW,4BAA4B,KAAO,wBAAwB,mBAAmB,oCAAoC,KAAO,wBAAwB,YAAY,6BAA6B,WAAW,4BAA4B,OAAS,0BAA0B,KAAO,wBAAwB,IAAM,uBAAuB,OAAS,0BAA0B,cAAc,+BAA+B,WAAW,4BAA4B,YAAY,6BAA6B,aAAa,8BAA8B,YAAY,6BAA6B,sBAAsB,uCAAuC,cAAc,+BAA+B,YAAY,6BAA6B,YAAY,6BAA6B,cAAc,+BAA+B,MAAQ,yBAAyB,YAAY,6BAA6B,iBAAiB,kCAAkC,KAAO,wBAAwB,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,wBAAwB,YAAY,6BAA6B,SAAW,4BAA4B,eAAe,gCAAgC,kBAAkB,mCAAmC,oBAAoB,qCAAqC,QAAU,2BAA2B,iBAAiB,kCAAkC,cAAc,+BAA+B,aAAa,8BAA8B,iBAAiB,kCAAkC,sBAAsB,uCAAuC,eAAe,gCAAgC,MAAQ,yBAAyB,wBAAwB,yCAAyC,gBAAgB,iCAAiC,oBAAoB,qCAAqC,oBAAoB,qCAAqC,oBAAoB,qCAAqC,YAAY,6BAA6B,WAAW,4BAA4B,oBAAoB,qCAAqC,eAAe,gCAAgC,cAAc,+BAA+B,eAAe,gCAAgC,IAAM,uBAAuB,GAAK,sBAAsB,OAAS,0BAA0B,SAAW,4BAA4B,wBAAwB,yCAAyC,cAAc,+BAA+B,wBAAwB,yCAAyC,eAAe,gCAAgC,eAAe,gCAAgC,oBAAoB,sC,mFCiQj0F,QAvPA,WAAsB,IAADY,EAAAC,EAAAC,EACjB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACrCC,SAAS,EACTC,KAAM,MAEHC,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAkBC,IAAuBN,EAAAA,EAAAA,WAAS,IAClDO,EAAgBC,IAAqBR,EAAAA,EAAAA,UAAS,OAE9CS,IAAuBT,EAAAA,EAAAA,UAAwC,QAAhCP,EAACiB,aAAaC,QAAQ,kBAAU,IAAAlB,EAAAA,EAAI,KA8C1EmB,EAAAA,EAAAA,YAAU,KACNC,GAAa,GACd,IAEH,MAAMA,EAAcA,KAChBd,EAAY,CACRE,SAAS,EACTC,KAAM,OAEV,MAAMY,EAASJ,aAAaC,QAAQ,WACpCI,EAAAA,EAAMC,IAAI,GAAGC,EAAAA,oBAA0BH,KAAUI,MAAMC,IAAS,IAADC,EAC3D,GAAY,QAAZA,EAAID,EAAIjB,YAAI,IAAAkB,GAARA,EAAUlB,KAAM,CAAC,IAADmB,EAChB,MAAMC,EAAeH,EAAIjB,KAAKA,KACxBqB,EAA0D,QAA9CF,EAAe,OAAZC,QAAY,IAAZA,OAAY,EAAZA,EAAcE,QAAQC,GAAQA,EAAIC,kBAAS,IAAAL,EAAAA,EAAI,GACpEtB,EAAY,CACRE,SAAS,EACTC,KAAMqB,EAAaI,WAE3B,MACI5B,EAAY,CACRE,SAAS,EACTC,KAAM,MAEV0B,EAAAA,EAAAA,IAAU,wDACd,IACDC,OAAOC,IACN/B,EAAY,CACRE,SAAS,EACTC,KAAM,MAEV0B,EAAAA,EAAAA,IAAU,2CAA2C,GACvD,EAYAG,GAAsBC,EAAAA,EAAAA,cAAaC,IACjCA,EAAS3C,OAAS4C,EAAAA,GAAWC,KAC7BvC,EAAS,YAAoB,OAARqC,QAAQ,IAARA,OAAQ,EAARA,EAAUnB,UACxBmB,EAAS3C,OAAS4C,EAAAA,GAAWE,OACpCxC,EAAS,WAETA,EAAS,UACb,GAED,CAACA,IAEEyC,GAAcL,EAAAA,EAAAA,cAAaC,IAC7B,IAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU3C,QAAS4C,EAAAA,GAAWE,OAAQ,CAAC,IAADE,EACtC,MAAM7B,EAAsBC,aAAaC,QAAQ,WAC3C4B,EAAqB,OAARN,QAAQ,IAARA,GAAiB,QAATK,EAARL,EAAUO,eAAO,IAAAF,OAAT,EAARA,EAAmBG,MAAMhB,GAAQA,EAAIX,SAAWL,IACnE,GAAI8B,EAAY,CACZ,GAAc,OAAVA,QAAU,IAAVA,GAAAA,EAAYG,QACZ,OAAO,KACJ,IAAc,OAAVH,QAAU,IAAVA,OAAU,EAAVA,EAAYI,UAAWC,EAAAA,GAAOC,SAErC,OAAO7D,EAAAA,EAAAA,KAAA,OAAKC,UAAW,iCAAiCN,SAAC,aAGtD,IAAc,OAAV4D,QAAU,IAAVA,OAAU,EAAVA,EAAYI,UAAWC,EAAAA,GAAOE,UAErC,OAAO9D,EAAAA,EAAAA,KAAA,OAAKC,UAAW,iCAAiCN,SAAC,cAGtD,IAAc,OAAV4D,QAAU,IAAVA,OAAU,EAAVA,EAAYI,UAAWC,EAAAA,GAAOG,SAErC,OAAO/D,EAAAA,EAAAA,KAAA,OAAKC,UAAW,iCAAiCN,SAAC,YAIjE,CACA,OAAOK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMN,UACxBK,EAAAA,EAAAA,KAAA,UAAQC,UAAU,yBAAyBM,QAASA,KAnF5DiB,EAmFkGyB,EAnFzEe,UACzB1C,GAAoB,IAkFwF3B,SAAC,aAE7G,CAAO,OAAY,OAARsD,QAAQ,IAARA,OAAQ,EAARA,EAAU3C,QAAS4C,EAAAA,GAAWe,OAC9BjE,EAAAA,EAAAA,KAAA,OAAKC,UAAW,iCAAiCN,SAAC,UAItD,IAAI,GACZ,IAEGuE,GAAeC,EAAAA,EAAAA,UAAQ,KAAO,IAADC,EAC/B,OAAe,OAARtD,QAAQ,IAARA,GAAc,QAANsD,EAARtD,EAAUI,YAAI,IAAAkD,OAAN,EAARA,EAAgBC,KAAKpB,IAAc,IAADqB,EACrC,OAAKrB,EAAS3C,OAAS4C,EAAAA,GAAWE,QAAoB,OAARH,QAAQ,IAARA,GAAAA,EAAUsB,eAGjDlE,EAAAA,EAAAA,MAAA,OAAKJ,UAAW,GAAGuE,EAAO,yBAAyB7E,SAAA,EACtDU,EAAAA,EAAAA,MAAA,OAAKJ,UAAW,GAAGuE,EAAO,iBAAiB7E,SAAA,EACvCK,EAAAA,EAAAA,KAAA,OAAKyE,IAAKxB,EAASyB,gBAAkB,GAAGzC,EAAAA,KAAWgB,EAASyB,kBA1JpD,mCA0J6FC,IAAI,oBAAoB1E,UAAW,GAAGuE,EAAO,kBAAkBA,EAAO,iBAC3KnE,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,oBAAmBN,SAAA,EAC9BU,EAAAA,EAAAA,MAAA,OAAKJ,UAAW,GAAGuE,EAAO,eAAgBI,KAAK,SAASrE,QAASA,IAAMwC,EAAoBE,GAAUtD,SAAA,EACjGK,EAAAA,EAAAA,KAAA,MAAIC,UAAW,GAAGuE,EAAa,QAAKA,EAAO,eAAeA,EAAa,OAAI7E,SAAsB,QAAtB2E,EAAErB,EAAS4B,mBAAW,IAAAP,OAAA,EAApBA,EAAsBQ,YACnG9E,EAAAA,EAAAA,KAAA,KAAGC,UAAW,GAAGuE,EAAa,aAElCxE,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGuE,EAAO,eAAe7E,UAC5B,OAARsD,QAAQ,IAARA,OAAQ,EAARA,EAAUvD,SAASM,EAAAA,EAAAA,KAAA,MAAIC,UAAW,GAAGuE,EAAc,SAAKA,EAAO,eAAeA,EAAa,OAAI7E,SAAU,OAARsD,QAAQ,IAARA,OAAQ,EAARA,EAAUvD,iBAI/G,OAARuD,QAAQ,IAARA,OAAQ,EAARA,EAAU8B,YAAY/E,EAAAA,EAAAA,KAAA,OAAKC,UAAW,IAAIuE,EAAO,eAAe7E,UAC5DqF,EAAAA,EAAAA,IAAyB,OAAR/B,QAAQ,IAARA,OAAQ,EAARA,EAAU8B,WAAY/E,EAAAA,EAAAA,KAAA,OAAKyE,IAAK,GAAGxC,EAAAA,KAAmB,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAU8B,WAAYJ,IAAI,sBAAsB1E,UAAW,GAAGuE,EAAO,iBAAoBxE,EAAAA,EAAAA,KAAA,SAAOiF,UAAQ,EAACR,IAAK,GAAGxC,EAAAA,KAAmB,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAU8B,WAAY9E,UAAW,GAAGuE,EAAO,mBAEjO,OAARvB,QAAQ,IAARA,OAAQ,EAARA,EAAU8B,YAAoB,OAAR9B,QAAQ,IAARA,OAAQ,EAARA,EAAUiC,QAASlF,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGuE,EAAiB,WAAI7E,UAC/EK,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGuE,EAAO,mDAAmD7E,UACzEK,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAAA,KAAAL,SAAY,OAARsD,QAAQ,IAARA,OAAQ,EAARA,EAAUiC,eAKf,OAARjC,QAAQ,IAARA,GAAAA,EAAU8B,YAAoB,OAAR9B,QAAQ,IAARA,OAAQ,EAARA,EAAUiC,QAASlF,EAAAA,EAAAA,KAAA,OAAAL,UACxCK,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAAA,KAAGC,UAAWuE,EAAO,qBAAqB7E,SAAU,OAARsD,QAAQ,IAARA,OAAQ,EAARA,EAAUiC,YAI9D7E,EAAAA,EAAAA,MAAA,OAAKJ,UAAW,mCAA2C,OAARgD,QAAQ,IAARA,GAAAA,EAAUiC,KAAgB,GAAT,QAAcvF,SAAA,CAC7EsD,EAAS3C,OAAS4C,EAAAA,GAAWe,QAASjE,EAAAA,EAAAA,KAAA,OAAAL,UACnCK,EAAAA,EAAAA,KAAA,KAAGC,UAAW,GAAGuE,EAAO,eAAe7E,SAAU,OAARsD,QAAQ,IAARA,GAAAA,EAAUkC,YAAe,IAAIC,KAAKnC,EAASkC,aAAcE,eAAiB,SAGtHpC,EAAS3C,OAAS4C,EAAAA,GAAWe,QAAS5D,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACnCK,EAAAA,EAAAA,KAAA,KAAGC,UAAW,GAAGuE,EAAO,4BAA4B7E,UACvC,OAARsD,QAAQ,IAARA,OAAQ,EAARA,EAAUqC,aAAatF,EAAAA,EAAAA,KAAA,QAAAL,SAAO,YAAa,IAAIyF,KAAa,OAARnC,QAAQ,IAARA,OAAQ,EAARA,EAAUqC,WAAYD,sBAE/ErF,EAAAA,EAAAA,KAAA,KAAGC,UAAW,GAAGuE,EAAO,uBAAuB7E,UAClC,OAARsD,QAAQ,IAARA,OAAQ,EAARA,EAAUsC,WAAWvF,EAAAA,EAAAA,KAAA,QAAAL,SAAO,UAAW,IAAIyF,KAAa,OAARnC,QAAQ,IAARA,OAAQ,EAARA,EAAUsC,SAAUF,yBAG7EhF,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gDAA+CN,SAAA,CACzD0D,EAAcJ,IACfjD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMN,UACjBK,EAAAA,EAAAA,KAAA,KAAGC,UAAW,sBAAsBuE,EAAO,eAAgB,cAAY,OACnEjE,QAASA,IA3GhBiF,KAGjB,MACMC,EAAc,GADLC,OAAOC,SAASC,eACOJ,IACtCK,UAAUC,UAAUC,UAAUN,IAC9B7C,EAAAA,EAAAA,IAAU,eAAe,EAAM,EAqGQoD,CAAY/C,EAASe,SAE1CvC,IAAwBwB,EAASnB,SAAW9B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMN,UAC/DK,EAAAA,EAAAA,KAAA,KAAGC,UAAW,uBAAuBuE,EAAO,eAAgB,cAAY,OAAOjE,QAASA,IAAMK,EAAS,SAASqC,EAASe,WAE3HvC,IAAwBwB,EAASnB,SAAW9B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMN,UAC/DK,EAAAA,EAAAA,KAAA,KAAGC,UAAW,eAAeuE,EAAO,eAAgB,cAAY,OAC5DjE,QAASA,KA7JjCiB,EA6JgEyB,EA7JvCe,UACzB5C,GAAa,gBAsGuD6B,EAASe,KAF9D,IA6DL,GACR,GAEH,CAACvC,EAAqB4B,EAAezC,EAAUmC,EAA6B,OAARjC,QAAQ,IAARA,OAAQ,EAARA,EAAUI,OAE3E+E,GAAe9B,EAAAA,EAAAA,UAAQ,KAClBnE,EAAAA,EAAAA,KAACkG,EAAAA,EAAgB,KACzB,IAEGC,GAAehC,EAAAA,EAAAA,UAAQ,KAClBnE,EAAAA,EAAAA,KAACoG,EAAAA,EAAW,KACpB,IAEH,OACIpG,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGuE,EAAsB,iBAAKA,EAAO,sBAAsB7E,UACvEK,EAAAA,EAAAA,KAAA,OAAKC,UAAW,IAAIuE,EAAO,kBAAkBA,EAAO,wBAAwB7E,UAExEU,EAAAA,EAAAA,MAAA,OAAKJ,UAAW,GAAGuE,EAAO,oBAAoB7E,SAAA,CAEzCmB,EAASG,SAAWgF,GAClBnF,EAASG,UAAwB,QAAbP,EAAAI,EAASI,YAAI,IAAAR,OAAA,EAAbA,EAAe2F,SAAU,GAAMF,GACnDrF,EAASG,SAAwB,QAAjBN,EAAIG,EAASI,YAAI,IAAAP,GAAbA,EAAe0F,OAAUnC,EAAe,MAC/DlE,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAACsG,EAAAA,EAAiB,CAAC9G,KAAM2B,EAAW1B,YAAaA,IAAM2B,GAAa,GAAQxB,aAAcA,IA5N9E2G,MAC5BnF,GAAa,GACb,MAAMU,EAASJ,aAAaC,QAAQ,WACpCI,EAAAA,EAAMyE,OAAO,GAAGvE,EAAAA,UAAgBH,KAAUP,KAAkBW,MAAMC,IAAS,IAADsE,EAC1D,QAAZA,EAAItE,EAAIjB,YAAI,IAAAuF,GAARA,EAAUvF,OACV0B,EAAAA,EAAAA,IAAU,6BAA6B,GACvCf,MAEAe,EAAAA,EAAAA,IAAU,yCACd,IACDC,OAAOC,KACNF,EAAAA,EAAAA,IAAU,4CAA4C,IACvD8D,SAAQ,KACPtF,GAAa,EAAM,GACrB,EA8M8GmF,GAA2B7G,MAAM,cAAaC,UAC1IK,EAAAA,EAAAA,KAAA,KAAAL,SAAG,oDAGXK,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAACsG,EAAAA,EAAiB,CAAC9G,KAAM6B,EAAkB5B,YAAaA,IAAM6B,GAAoB,GAAQ1B,aAAcA,IAhNlG+G,MACtBrF,GAAoB,GACpB,MAAMQ,EAASJ,aAAaC,QAAQ,WACpCI,EAAAA,EAAM6E,IAAI,GAAG3E,EAAAA,sBAA4BH,KAAUP,KAAkBW,MAAMC,IAAS,IAAD0E,EACnE,QAAZA,EAAI1E,EAAIjB,YAAI,IAAA2F,GAARA,EAAU3F,OACV0B,EAAAA,EAAAA,IAAU,uBAAuB,GACjCf,MAEAe,EAAAA,EAAAA,IAAU,0DACd,IACDC,OAAOC,KACNF,EAAAA,EAAAA,IAAU,4CAA4C,IACvD8D,SAAQ,KACPtF,GAAa,EAAM,GACrB,EAkM4HuF,GAAqBjH,MAAM,sBAAqBC,UAC1JK,EAAAA,EAAAA,KAAA,KAAAL,SAAG,4DAO/B,C,8FC9PO,MAAMmH,EAAgB,CAAC,MAAO,OAExB9B,EAAoB+B,IAC7B,MAAMC,EAA2B,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUE,MAAM,KACnCC,EAAaF,EAAiBA,EAAiBX,OAAS,GAC9D,OAAQS,EAAcK,SAAmB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYE,cAAc,EAIhDxE,EAAY,SAACyE,GAA6B,IAApBC,IAAOC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,KAAAA,UAAA,GACtCE,EAAAA,GAAMH,EAAU,QAAU,WAAWD,EAAS,CAC1CK,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUR,EACVS,MAAO,OACPC,WAAYC,EAAAA,IAEpB,EAEaC,EAAqB,CAC9BC,MAAO,QACPjF,OAAQ,UAGCQ,EAAS,CAClBC,SAAU,WACVC,UAAW,YACXC,SAAU,YAGDb,EAAa,CACtBC,KAAM,OACNc,MAAO,QACPb,OAAQ,UASCkF,EAAuBC,GACdA,EAAUtB,MAAM,cAEK5C,KAAI,CAACmE,EAAUC,IAC9CA,EAAQ,IAAM,EACPD,EAASE,OAAO,GAAGC,cAAgBH,EAASI,MAAM,GAAGxB,cAEzDoB,IAGiBK,KAAK,G,0CCzDrC,QAAoC,4CAApC,EAA4F,oC,aCY5F,QAVA,WACE,OACE7I,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGuE,IAA8B7E,UACzCK,EAAAA,EAAAA,KAAA,OAAKC,UAAW,+BAA+BuE,IAAuBI,KAAK,SAAQjF,UAC/EK,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAIhC,C,uDCEA,QAVA,WACE,OACED,EAAAA,EAAAA,KAAA,OAAKC,UAAW,6CAA6CN,UACrDK,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAAA,OAAKyE,IANN,+BAMmBE,IAAI,qBAItC,C","sources":["ConfirmationModal/ConfirmationModal.jsx","webpack://indie-fusion-ui/./src/Dashboard/Dashboard.module.css?ff1a","Dashboard/Dashboard.jsx","Utils/utils.jsx","webpack://indie-fusion-ui/./src/shared/components/LoadingIndicator/LoadingIndicator.module.css?ca50","shared/components/LoadingIndicator/LoadingIndicator.jsx","shared/components/NodataFound/NoDataFound.jsx"],"sourcesContent":["const ConfirmationModal = ({ show, handleClose, title, children, handleSubmit, submitLabel = 'Ok', closeLabel = 'Cancel', submitDisable = false }) => {\n  return (\n    <div className={`modal fade ${show ? 'show d-block' : ''}`} tabIndex=\"-1\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{title}</h5>\n          </div>\n          <div className=\"modal-body\">\n            {children}\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={handleClose}>{closeLabel}</button>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleSubmit} disabled={submitDisable}>{submitLabel}</button>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;","// extracted by mini-css-extract-plugin\nexport default {\"dashboardCard\":\"Dashboard_dashboardCard__akHR6\",\"00000099\":\"Dashboard_00000099__FlMyd\",\"card-height\":\"Dashboard_card-height__EAIlM\",\"main-container\":\"Dashboard_main-container__Ivivt\",\"opacity\":\"Dashboard_opacity__rmp8J\",\"mg-right\":\"Dashboard_mg-right__LivMm\",\"bold\":\"Dashboard_bold__2E3Vr\",\"view-comment-btn\":\"Dashboard_view-comment-btn__t3XRu\",\"date\":\"Dashboard_date__afs6C\",\"fill-blue\":\"Dashboard_fill-blue__nBeCZ\",\"fill-red\":\"Dashboard_fill-red__FiF33\",\"hidden\":\"Dashboard_hidden__SKYcu\",\"show\":\"Dashboard_show__VfjoB\",\"dot\":\"Dashboard_dot__AoBvy\",\"rotate\":\"Dashboard_rotate__k7Dow\",\"profile-img\":\"Dashboard_profile-img__a8zHU\",\"post-img\":\"Dashboard_post-img__Cnvjg\",\"menu-list\":\"Dashboard_menu-list__UxHuJ\",\"menu-items\":\"Dashboard_menu-items__QntMX\",\"menu-date\":\"Dashboard_menu-date__IKRcr\",\"container-dashboard\":\"Dashboard_container-dashboard__e4MBb\",\"header-data\":\"Dashboard_header-data__skRQB\",\"post-data\":\"Dashboard_post-data__vfvpr\",\"poat-data\":\"Dashboard_poat-data__7xG+G\",\"likes-count\":\"Dashboard_likes-count__WUYB-\",\"likes\":\"Dashboard_likes__GUs8q\",\"user-data\":\"Dashboard_user-data__ZHeUO\",\"icon-container\":\"Dashboard_icon-container__Wuwp+\",\"save\":\"Dashboard_save__PtIOk\",\"user\":\"Dashboard_user__QjcPt\",\"group\":\"Dashboard_group__SCQ2l\",\"city\":\"Dashboard_city__8f3-F\",\"icon-size\":\"Dashboard_icon-size__mZnPw\",\"location\":\"Dashboard_location__nClFj\",\"post-content\":\"Dashboard_post-content__U54bc\",\"comment-section\":\"Dashboard_comment-section__z9COv\",\"truncate-overflow\":\"Dashboard_truncate-overflow__h2DCz\",\"overlay\":\"Dashboard_overlay__2vStM\",\"comments-modal\":\"Dashboard_comments-modal__ChrUX\",\"likes-modal\":\"Dashboard_likes-modal__eogv5\",\"show-modal\":\"Dashboard_show-modal__o5F2R\",\"modal-comments\":\"Dashboard_modal-comments__yL3EY\",\"modal-likes-content\":\"Dashboard_modal-likes-content__P94zy\",\"modal-header\":\"Dashboard_modal-header__Jvahp\",\"close\":\"Dashboard_close__uIjmK\",\"comments-list-wrapper\":\"Dashboard_comments-list-wrapper__9Ig8L\",\"comments-list\":\"Dashboard_comments-list__I5Hoq\",\"list-item-wrapper\":\"Dashboard_list-item-wrapper__A6+u-\",\"comment-list-item\":\"Dashboard_comment-list-item__V-f8g\",\"comment-list-icon\":\"Dashboard_comment-list-icon__-7Fk7\",\"like-icon\":\"Dashboard_like-icon__Zfkyn\",\"list-div\":\"Dashboard_list-div__P7UBI\",\"replies-container\":\"Dashboard_replies-container__AbRL1\",\"view-replies\":\"Dashboard_view-replies__kqy8z\",\"replies-box\":\"Dashboard_replies-box__demhB\",\"show-replies\":\"Dashboard_show-replies__R9rgD\",\"svg\":\"Dashboard_svg__RMeob\",\"hr\":\"Dashboard_hr__lMkMg\",\"follow\":\"Dashboard_follow__cQv8l\",\"unfollow\":\"Dashboard_unfollow__ZrixK\",\"modal-likes-list-item\":\"Dashboard_modal-likes-list-item__MVWwm\",\"close-modal\":\"Dashboard_close-modal__16add\",\"modal-heading-wrapper\":\"Dashboard_modal-heading-wrapper__Dq+dQ\",\"user-details\":\"Dashboard_user-details__-R1ta\",\"user-wrapper\":\"Dashboard_user-wrapper__YURq7\",\"only-text-content\":\"Dashboard_only-text-content__AoI+z\"};","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './Dashboard.module.css';\nimport axios from 'axios';\nimport { API_URL } from '../appConfig';\nimport { getIsImageFormat, openToast, POST_TYPES, STATUS } from '../Utils/utils';\nimport { useNavigate } from 'react-router-dom';\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\nimport NoDataFound from '../shared/components/NodataFound/NoDataFound';\nimport LoadingIndicator from '../shared/components/LoadingIndicator/LoadingIndicator';\nconst deafultProfileImage = '/Images/DefaultProfileImage.webp';\n\nfunction Dashboard() {\n    const navigate = useNavigate();\n    const [postList, setPostList] = useState({\n        loading: false,\n        data: []\n    });\n    const [modalShow, setModalShow] = useState(false);\n    const [requestShowModel, setRequestShowModel] = useState(false);\n    const [selectedPostId, setSelectedPostId] = useState(null);\n\n    const [currentLoggedInUser] = useState(localStorage.getItem('USER_ID') ?? '');\n\n    const deleteAfterConfirmation = () => {\n        setModalShow(false);\n        const userId = localStorage.getItem('USER_ID');\n        axios.delete(`${API_URL}/post/${userId}/${selectedPostId}`).then((res) => {\n            if (res.data?.data) {\n                openToast('Post Deleted Successfully', false);\n                getAllPosts();\n            } else {\n                openToast('Not able to delete... Please try again');\n            }\n        }).catch((e) => {\n            openToast('Something went wrong ... Please try again');\n        }).finally(() => {\n            setModalShow(false);\n        })\n    }\n\n    const sendCollabRequest = () => {\n        setRequestShowModel(false);\n        const userId = localStorage.getItem('USER_ID');\n        axios.put(`${API_URL}/group/add-member/${userId}/${selectedPostId}`).then((res) => {\n            if (res.data?.data) {\n                openToast(\"Collab request sent\", false);\n                getAllPosts();\n            } else {\n                openToast('Not able to send the collab request... Please try again');\n            }\n        }).catch((e) => {\n            openToast('Something went wrong ... Please try again');\n        }).finally(() => {\n            setModalShow(false);\n        })\n    }\n\n    const deleteBeforeConfirmation = (postId) => {\n        setSelectedPostId(postId._id);\n        setModalShow(true);\n    }\n\n    const collabRequestBeforeConfirmation = (postId) => {\n        setSelectedPostId(postId._id);\n        setRequestShowModel(true);\n    }\n\n    useEffect(() => {\n        getAllPosts();\n    }, []);\n\n    const getAllPosts = () => {\n        setPostList({\n            loading: true,\n            data: null\n        });\n        const userId = localStorage.getItem('USER_ID');\n        axios.get(`${API_URL}/post-dashboard/${userId}`).then((res) => {\n            if (res.data?.data) {\n                const responseData = res.data.data;\n                const filteredData = responseData?.filter((obj) => obj.isActive) ?? [];\n                setPostList({\n                    loading: false,\n                    data: filteredData.reverse()\n                });\n            } else {\n                setPostList({\n                    loading: false,\n                    data: []\n                })\n                openToast(\"Not able to fetch the data now... Try again later... \");\n            }\n        }).catch((e) => {\n            setPostList({\n                loading: false,\n                data: []\n            })\n            openToast(\"Something went wrong... Please try again\");\n        })\n    }\n\n    const onShareLink = (postId) => {\n        //http://localhost:3000/view/postId\n        // i have to create a route for the view--(view/postId)\n        const origin = window.location.origin;\n        const sharableUrl = `${origin}/post/${postId}`;\n        navigator.clipboard.writeText(sharableUrl);\n        openToast(\"Link Copied\", false);\n    }\n\n    const navigateBasedOnType = useCallback((eachPost) => {\n        if (eachPost.type === POST_TYPES.SELF) {\n            navigate(`/profile/${eachPost?.userId}`)\n        } else if (eachPost.type === POST_TYPES.COLLAB) {\n            navigate(`/groups`);\n        } else {\n            navigate(`/events`);\n        }\n\n    }, [navigate]);\n\n    const getCollabIcon=useCallback((eachPost)=>{\n        if (eachPost?.type === POST_TYPES.COLLAB) {\n            const currentLoggedInUser = localStorage.getItem(\"USER_ID\");\n            const memberUser = eachPost?.members?.find((obj) => obj.userId === currentLoggedInUser);\n            if (memberUser) {\n                if (memberUser?.isAdmin) {\n                    return null;\n                } else if (memberUser?.status === STATUS.APPROVED) {\n                    // APPROVED UI\n                    return <div className={`me-3 badge bg-secondary btn-sm`}>\n                        Approved\n                    </div>\n                } else if (memberUser?.status === STATUS.REQUESTED) {\n                    // REQUESTED UI\n                    return <div className={`me-3 badge bg-secondary btn-sm`}>\n                        Requested\n                    </div>\n                } else if (memberUser?.status === STATUS.REJECTED) {\n                    // REJECTED UI\n                    return <div className={`me-3 badge bg-secondary btn-sm`}>\n                        REJECTED\n                    </div>\n                }\n            }\n            return <div className='me-3'>\n                <button className='btn btn-primary btn-sm' onClick={() => collabRequestBeforeConfirmation(eachPost)}>Request</button>\n            </div>\n        } else if (eachPost?.type === POST_TYPES.EVENT) {\n            return <div className={`me-3 badge bg-secondary btn-sm`}>\n                Event\n            </div>\n        }\n        return null;\n    }, [])\n\n    const postListMemo = useMemo(() => {\n        return postList?.data?.map((eachPost) => {\n            if ((eachPost.type === POST_TYPES.COLLAB) && !eachPost?.isGroupActive) {\n                return null;\n            }\n            return <div className={`${styles[\"container-dashboard\"]}`} key={eachPost._id}>\n                <div className={`${styles[\"header-data\"]}`}>\n                    <img src={eachPost.profileImageUrl ? `${API_URL}/${eachPost.profileImageUrl}` : deafultProfileImage} alt=\"Profile Not found\" className={`${styles[\"profile-img\"]} ${styles[\"mg-right\"]}`} />\n                    <div className=\"user-wrapper ps-2\">\n                        <div className={`${styles[\"user-data\"]}`} role=\"button\" onClick={() => navigateBasedOnType(eachPost)}>\n                            <h3 className={`${styles['user']} ${styles[\"mg-right\"]} ${styles[\"bold\"]}`}>{eachPost.userDetails?.userName}</h3>\n                            <p className={`${styles[\"date\"]}`}></p>\n                        </div>\n                        <div className={`${styles[\"user-data\"]}`}>\n                            {eachPost?.title && <h3 className={`${styles['group']} ${styles[\"mg-right\"]} ${styles[\"bold\"]}`}>{eachPost?.title}</h3>}\n                        </div>\n                    </div>\n                </div>\n                {eachPost?.mediaUrl && <div className={` ${styles[\"post-data\"]}`}>\n                    {getIsImageFormat(eachPost?.mediaUrl) ? <img src={`${API_URL}/${eachPost?.mediaUrl}`} alt=\"Media URL not found\" className={`${styles[\"post-img\"]}`} /> : <video controls src={`${API_URL}/${eachPost?.mediaUrl}`} className={`${styles[\"post-img\"]}`} />}\n                </div>}\n                {(eachPost?.mediaUrl && eachPost?.text) && <div className={`${styles[\"metadata\"]}`}>\n                    <div className={`${styles[\"icon-container\"]} d-flex justify-content-between`}>\n                        <div>\n                            <p>{eachPost?.text}</p>\n                        </div>\n                    </div>\n                </div>}\n                {/* Only Text */}\n                {(!eachPost?.mediaUrl && eachPost?.text) && <div>\n                    <div>\n                        <p className={styles['only-text-content']}>{eachPost?.text}</p>\n                    </div>\n                </div>}\n\n                <div className={`d-flex justify-content-between ${!eachPost?.text ? 'pt-2' : ''}`}>\n                    {eachPost.type !== POST_TYPES.EVENT && <div>\n                        <p className={`${styles[\"menu-date\"]}`}>{eachPost?.createdDate ? (new Date(eachPost.createdDate)).toDateString() : null}</p>\n                    </div>}\n\n                    {eachPost.type === POST_TYPES.EVENT && <div>\n                        <p className={`${styles[\"menu-date\"]} mb-0 fw-bold`}>\n                            {eachPost?.startDate && <span>{`Starts - ${(new Date(eachPost?.startDate)).toDateString()}`}</span>}\n                        </p>\n                        <p className={`${styles[\"menu-date\"]} fw-bold`}>\n                            {eachPost?.endDate && <span>{`Ends - ${(new Date(eachPost?.endDate)).toDateString()}`}</span>}\n                        </p>\n                    </div>}\n                    <div className='d-flex justify-content-end align-items-center'>\n                        {getCollabIcon(eachPost)}\n                        <div className='me-3'>\n                            <i className={`fa fa-share-square ${styles[\"icon-size\"]}`} aria-hidden=\"true\"\n                                onClick={() => onShareLink(eachPost._id)}></i>\n                        </div>\n                        {(currentLoggedInUser === eachPost.userId) && <div className='me-3'>\n                            <i className={`fa fa-pencil-square ${styles[\"icon-size\"]}`} aria-hidden=\"true\" onClick={() => navigate(`/edit/${eachPost._id}`)}></i>\n                        </div>}\n                        {(currentLoggedInUser === eachPost.userId) && <div className='me-3'>\n                            <i className={`fa fa-trash ${styles[\"icon-size\"]}`} aria-hidden=\"true\"\n                                onClick={() => deleteBeforeConfirmation(eachPost)}></i>\n                        </div>}\n\n                    </div>\n                </div>\n            </div>\n        })\n\n    }, [currentLoggedInUser, getCollabIcon, navigate, navigateBasedOnType, postList?.data]);\n\n    const postsLoading = useMemo(() => {\n        return <LoadingIndicator/>\n    }, []);\n\n    const noPostsFound = useMemo(() => {\n        return <NoDataFound/>\n    }, []);\n\n    return (\n        <div className={`${styles[\"dashboardCard\"]} ${styles[\"background-Color\"]}`} >\n            <div className={` ${styles[\"card-height\"]} ${styles[\"align-items-center\"]}`}>\n\n                <div className={`${styles[\"main-container\"]}`}>\n\n                    {postList.loading && postsLoading}\n                    {(!postList.loading && postList.data?.length <= 0) && noPostsFound}\n                    {(!postList.loading && postList.data?.length) ? postListMemo : null}\n                    <div>\n                        <ConfirmationModal show={modalShow} handleClose={() => setModalShow(false)} handleSubmit={() => deleteAfterConfirmation()} title=\"Delete Post\">\n                            <p>Are you sure you want to delete this post?</p>\n                        </ConfirmationModal>\n                    </div>\n                    <div>\n                        <ConfirmationModal show={requestShowModel} handleClose={() => setRequestShowModel(false)} handleSubmit={() => sendCollabRequest()} title=\"Send Collab Request\">\n                            <p>Are you sure you want to send collab request?</p>\n                        </ConfirmationModal>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","import { Bounce, toast } from \"react-toastify\";\n\nexport const VIDEO_FORMATS = ['mp4', 'mov'];\n\nexport const getIsImageFormat = (fileName) => {\n    const spilltedFileName = fileName?.split('.');\n    const fileFormat = spilltedFileName[spilltedFileName.length - 1];\n    return !VIDEO_FORMATS.includes(fileFormat?.toLowerCase());\n}\n\n\nexport const openToast = (message, isError = true) => {\n    toast[isError ? 'error' : 'success'](message, {\n        position: \"top-right\",\n        autoClose: 10000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"dark\",\n        transition: Bounce,\n    });\n}\n\nexport const NOTIFICATION_TYPES = {\n    GROUP: 'GROUP',\n    COLLAB: 'COLLAB'\n}\n\nexport const STATUS = {\n    APPROVED: \"APPROVED\",\n    REQUESTED: \"REQUESTED\",\n    REJECTED: \"REJECTED\"\n}\n\nexport const POST_TYPES = {\n    SELF: \"SELF\",\n    EVENT: \"EVENT\",\n    COLLAB: \"COLLAB\"\n}\n\n// If the post is not created by current user\nexport const getMemberFromMembers = (members) => {\n    const userId = localStorage.getItem(\"USER_ID\");\n    return members?.find((obj) => userId === obj.userId);\n}\n\nexport const capitalizeParagraph = (paragraph) => {\n    const sentences = paragraph.split(/([.!?])\\s*/);\n\n    const capitalizedSentences = sentences.map((sentence, index) => {\n        if (index % 2 === 0) {\n            return sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase();\n        }\n        return sentence;\n    });\n\n    return capitalizedSentences.join('');\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"loading-container\":\"LoadingIndicator_loading-container__u+u1Y\",\"indicator\":\"LoadingIndicator_indicator__Y5uSo\"};","import React from 'react';\nimport styles from './LoadingIndicator.module.css';\n\nfunction LoadingIndicator() {\n  return (\n    <div className={`${styles[\"loading-container\"]}`}>\n            <div className={`spinner-border text-primary ${styles[\"indicator\"]}`} role=\"status\" >\n                <span className=\"sr-only\"></span>\n            </div>\n        </div>\n  )\n}\n\nexport default LoadingIndicator","import React from 'react';\nconst noPost = '/Images/NoDataFoundImage.jpg';\n\nfunction NoDataFound() {\n  return (\n    <div className={'d-flex align-items-center flex-column pt-4'}>\n            <div>\n                <img src={noPost} alt='No Post Found' />\n            </div>\n        </div>\n  )\n}\n\nexport default NoDataFound"],"names":["_ref","show","handleClose","title","children","handleSubmit","submitLabel","closeLabel","submitDisable","_jsx","className","tabIndex","style","backgroundColor","_jsxs","type","onClick","disabled","_localStorage$getItem","_postList$data2","_postList$data3","navigate","useNavigate","postList","setPostList","useState","loading","data","modalShow","setModalShow","requestShowModel","setRequestShowModel","selectedPostId","setSelectedPostId","currentLoggedInUser","localStorage","getItem","useEffect","getAllPosts","userId","axios","get","API_URL","then","res","_res$data3","_responseData$filter","responseData","filteredData","filter","obj","isActive","reverse","openToast","catch","e","navigateBasedOnType","useCallback","eachPost","POST_TYPES","SELF","COLLAB","getCollabIcon","_eachPost$members","memberUser","members","find","isAdmin","status","STATUS","APPROVED","REQUESTED","REJECTED","_id","EVENT","postListMemo","useMemo","_postList$data","map","_eachPost$userDetails","isGroupActive","styles","src","profileImageUrl","alt","role","userDetails","userName","mediaUrl","getIsImageFormat","controls","text","createdDate","Date","toDateString","startDate","endDate","postId","sharableUrl","window","location","origin","navigator","clipboard","writeText","onShareLink","postsLoading","LoadingIndicator","noPostsFound","NoDataFound","length","ConfirmationModal","deleteAfterConfirmation","delete","_res$data","finally","sendCollabRequest","put","_res$data2","VIDEO_FORMATS","fileName","spilltedFileName","split","fileFormat","includes","toLowerCase","message","isError","arguments","undefined","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","transition","Bounce","NOTIFICATION_TYPES","GROUP","capitalizeParagraph","paragraph","sentence","index","charAt","toUpperCase","slice","join"],"sourceRoot":""}