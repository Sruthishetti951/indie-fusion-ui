{"version":3,"file":"static/js/43.b221d168.chunk.js","mappings":"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","sources":["webpack://indie-fusion-ui/./src/Create/Create.module.css?57c0","Create/Create.jsx","Utils/utils.jsx","webpack://indie-fusion-ui/./src/shared/components/title/Title.module.css?b1fc","shared/components/title/Title.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"createPostCard\":\"Create_createPostCard__mQs28\",\"input-box\":\"Create_input-box__4TtSA\",\"icon\":\"Create_icon__bUeWg\",\"image-upload\":\"Create_image-upload__KPGFQ\",\"withBackground\":\"Create_withBackground__n6Esu\",\"text-area\":\"Create_text-area__pw8lR\",\"post-height\":\"Create_post-height__7u8K5\",\"font-size-family\":\"Create_font-size-family__loIaT\"};","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport styles from './Create.module.css'\nimport axios from 'axios';\nimport { API_URL } from '../appConfig';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getIsImageFormat, openToast, POST_TYPES } from '../Utils/utils';\nimport Title from \"../shared/components/title/Title\";\n\nfunction Create() {\n    const params = useParams();\n    const defaultFormState = useMemo(() => ({\n        \"text\": \"\",\n        media: \"\",\n        \"type\": \"SELF\",\n        \"title\": \"\",\n        \"startDate\": \"\",\n        endDate: \"\"\n    }), [])\n    const [formState, setFormState] = useState(defaultFormState);\n    const [isImage, setIsImage] = useState(true);\n\n    const navigate = useNavigate();\n\n    const inputReference = useRef();\n    const [isLoading, setIsLoading] = useState(false);\n    const [blobPost, setBlobPost] = useState('');\n    const [ispreview, setIsPreview] = useState(false);\n    const [isOnlyText, setIsOnlyText] = useState(false);\n\n    const getPostDetailsByID = useCallback(() => {\n        const userId = localStorage.getItem('USER_ID');\n        axios.get(`${API_URL}/post/${userId}/${params?.postId}`).then((res) => {\n            if (res.data?.data) {\n                const responseData = res.data.data;\n                setFormState({\n                    text: responseData.text,\n                    type: responseData.type,\n                    title: responseData?.title,\n                    startDate: responseData?.startDate,\n                    endDate: responseData?.endDate\n                });\n                if (responseData?.mediaUrl) {\n                    setBlobPost(`${API_URL}/${responseData.mediaUrl}`);\n                    setIsPreview(true);\n                    setIsImage(getIsImageFormat(responseData?.mediaUrl));\n                } else {\n                    setIsOnlyText(true);\n                }\n            } else {\n                openToast(\"Not able to fetch the data now... Try again later... \");\n            }\n        }).catch((e) => {\n            openToast(\"Something went wrong... Please try again\");\n        })\n    }, [params?.postId]);\n\n    useEffect(() => {\n        if (params.postId) {\n            getPostDetailsByID();\n        } else {\n            setIsPreview(false);\n            setFormState(defaultFormState)\n        }\n    }, [params?.postId, defaultFormState, getPostDetailsByID]);\n\n\n\n    const onPostImage = (event) => {\n        if (event?.target?.files?.[0]) {\n            const file = event.target.files[0];\n            setIsImage(getIsImageFormat(file.name))\n            setBlobPost(URL.createObjectURL(file));\n            setFormState({ ...formState, media: file });\n            setIsPreview(true);\n        }\n    }\n\n    const onImagecLick = () => {\n        inputReference.current.click();\n    }\n\n    const profileHandler = async () => {\n        if (params.postId) {\n            updatePost();\n        } else {\n            createPost()\n        }\n    }\n\n    const backToHome = () => {\n        navigate('/dashboard');\n    }\n\n    const createPost = async () => {\n        const userID = localStorage.getItem('USER_ID');\n        setIsLoading(true);\n        try {\n            const response = await axios.post(`${API_URL}/post/${userID}`, formState, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n            if (response.data.data) {\n                setIsLoading(false);\n                openToast(\"Post Created successfully!\", false);\n                setTimeout(() => {\n                    navigate('/dashboard');\n                }, 2000);\n            } else {\n                setIsLoading(false);\n                openToast(\"Unable to create ... Please try again\");\n            }\n            setTimeout(() => {\n                setIsLoading(false);\n            }, 3000);\n        } catch (e) {\n            setIsLoading(false);\n            openToast(\"Something went wrong..Please try again..!\");\n        }\n\n    }\n\n    const updatePost = async () => {\n        const userID = localStorage.getItem('USER_ID');\n        setIsLoading(true);\n        try {\n            const response = await axios.put(`${API_URL}/post/${userID}/${params.postId}`, formState, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n            if (response.data.data) {\n                setIsLoading(false);\n                openToast(\"Post Updated successfully!\", false);\n            } else {\n                setIsLoading(false);\n                openToast(\"Unable to Update ... Please try again\");\n            }\n            setTimeout(() => {\n                setIsLoading(false);\n            }, 3000);\n        } catch (e) {\n            setIsLoading(false);\n            openToast(\"Something went wrong..Please try again..!\");\n        }\n\n    }\n\n    const getIsDisabled = useCallback(() => {\n        if (formState.type === POST_TYPES.SELF) {\n            return isLoading || (!ispreview && !formState.text)\n        } else if (POST_TYPES.EVENT === formState.type) {\n            if (!formState.startDate || !formState.endDate || !formState.title) {\n                return true;\n            }\n            return isLoading || (!ispreview && !formState.text);\n        } else {\n            if (!formState.title) {\n                return false;\n            }\n            return isLoading || (!ispreview && !formState.text);\n        }\n    }, [ispreview, formState, isLoading]);\n\n\n    return (\n        <div className={styles[\"createPostCard\"]}>\n            <div className={`card p-3 ${styles[\"post-height\"]}`}>\n                <div className={`d-flex justify-content-between mb-3`}>\n                    <div>\n                        <Title heading={params.postId ? \"Update Post\" : \"Create Post\"} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"collabPost\" className={`${styles[\"font-size-family\"]}`} >Post Type</label>\n                        <select className={`${styles[\"input-box\"]}`} id='collabPost' disabled={params.postId}\n                            value={formState.type} onChange={(event) => setFormState({ ...formState, type: event.target.value })}>\n                            <option value={POST_TYPES.SELF} className={`text-capitalize`}>Self</option>\n                            <option value={POST_TYPES.COLLAB} className='text-capitalize'>Collab</option>\n                            <option value={POST_TYPES.EVENT} className='text-capitalize'>Event</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={`mb-3`}>\n                        {formState?.type !== POST_TYPES.SELF && <div className=\"form-floating\">\n                            <input className=\"form-control\" placeholder=\"Title\" id=\"title\" value={formState.title} onChange={(event) => setFormState({ ...formState, title: event.target.value })} />\n                            <label htmlFor=\"title\">Title</label>\n                        </div>}\n                    </div>\n                    <div className={`mb-3`}>\n                        {formState?.type === POST_TYPES.EVENT && <div className=\"form-floating\">\n                            <input type='date' min={new Date().toJSON().slice(0, 10)} className=\"form-control\" placeholder=\"Start Date\" id=\"start-date\" value={formState.startDate} onChange={(event) => setFormState({ ...formState, startDate: event.target.value })} />\n                            <label htmlFor=\"start-date\">Start Date</label>\n                        </div>}\n                    </div>\n\n                    <div className={`mb-3`}>\n                        {formState?.type === POST_TYPES.EVENT && <div className=\"form-floating\">\n                            <input type='date' min={new Date().toJSON().slice(0, 10)} className=\"form-control\" placeholder=\"End Date\" id=\"end-date\" value={formState.endDate} onChange={(event) => setFormState({ ...formState, endDate: event.target.value })} />\n                            <label htmlFor=\"end-date\">End Date</label>\n                        </div>}\n                    </div>\n                    <div className={`mb-3`}>\n                        <div className=\"form-floating\">\n                            <textarea style={{ height: '100px' }} className=\"form-control\" placeholder=\"Type Here....\" id=\"floatingTextarea\" rows={5} value={formState.text} onChange={(event) => setFormState({ ...formState, text: event.target.value })}></textarea>\n                            <label htmlFor=\"floatingTextarea\">Status</label>\n                        </div>\n                    </div>\n                    {!isOnlyText && <div className={`d-flex justify-content-center align-items-center ${styles[\"image-upload\"]} ${(!params.id && !ispreview) ? styles['withBackground'] : ''}`}>\n\n                        {!ispreview ?\n                            <>\n                                <input type=\"file\" id=\"media\" hidden htmlFor=\"media\" ref={inputReference} onChange={(event) => onPostImage(event)} accept=\".mp4, .mov, .png, .jpeg, .jpg, .svg, .webp\" />\n                                <div>\n                                    <i className={`fa fa-upload ${styles[\"icon\"]}`} aria-hidden=\"true\" onClick={() => onImagecLick()}></i>\n                                </div>\n                            </> :\n                            <div className=\"d-flex justify-content-center\">\n                                {\n                                    isImage ? <img src={blobPost} alt=\"postImage\" /> : <video src={blobPost} controls />\n                                }\n                            </div>\n                        }\n                    </div>}\n                    <div className={'d-flex justify-content-center pt-3'}>\n                        <div >\n                            <button className={'btn btn-primary'} onClick={() => backToHome()} disabled={isLoading}>Cancel</button>\n                        </div>\n                        <div className={'ms-3'}>\n                            <button className={'btn btn-primary'} onClick={profileHandler} disabled={getIsDisabled()}>{params.postId ? \"Update\" : \"Create\"}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Create;","import { Bounce, toast } from \"react-toastify\";\n\nexport const VIDEO_FORMATS = ['mp4', 'mov'];\n\nexport const getIsImageFormat = (fileName) => {\n    const spilltedFileName = fileName?.split('.');\n    const fileFormat = spilltedFileName[spilltedFileName.length - 1];\n    return !VIDEO_FORMATS.includes(fileFormat?.toLowerCase());\n}\n\n\nexport const openToast = (message, isError = true) => {\n    toast[isError ? 'error' : 'success'](message, {\n        position: \"top-right\",\n        autoClose: 10000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"dark\",\n        transition: Bounce,\n    });\n}\n\nexport const NOTIFICATION_TYPES = {\n    GROUP: 'GROUP',\n    COLLAB: 'COLLAB'\n}\n\nexport const STATUS = {\n    APPROVED: \"APPROVED\",\n    REQUESTED: \"REQUESTED\",\n    REJECTED: \"REJECTED\"\n}\n\nexport const POST_TYPES = {\n    SELF: \"SELF\",\n    EVENT: \"EVENT\",\n    COLLAB: \"COLLAB\"\n}\n\n// If the post is not created by current user\nexport const getMemberFromMembers = (members) => {\n    const userId = localStorage.getItem(\"USER_ID\");\n    return members?.find((obj) => userId === obj.userId);\n}\n\nexport const capitalizeParagraph = (paragraph) => {\n    const sentences = paragraph.split(/([.!?])\\s*/);\n\n    const capitalizedSentences = sentences.map((sentence, index) => {\n        if (index % 2 === 0) {\n            return sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase();\n        }\n        return sentence;\n    });\n\n    return capitalizedSentences.join('');\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"heading-font\":\"Title_heading-font__UosSp\"};","import React from 'react';\nimport styles from './Title.module.css'\n\nfunction Title(props) {\n  return (\n    <div className={`${styles[\"heading-font\"]}`}>{props.heading}</div>\n  )\n}\n\nexport default Title"],"names":["params","useParams","defaultFormState","useMemo","media","endDate","formState","setFormState","useState","isImage","setIsImage","navigate","useNavigate","inputReference","useRef","isLoading","setIsLoading","blobPost","setBlobPost","ispreview","setIsPreview","isOnlyText","setIsOnlyText","getPostDetailsByID","useCallback","userId","localStorage","getItem","axios","get","API_URL","postId","then","res","_res$data","data","responseData","text","type","title","startDate","mediaUrl","getIsImageFormat","openToast","catch","e","useEffect","createPost","async","userID","post","headers","setTimeout","updatePost","put","getIsDisabled","POST_TYPES","SELF","EVENT","_jsx","className","styles","children","_jsxs","Title","heading","htmlFor","id","disabled","value","onChange","event","target","COLLAB","placeholder","min","Date","toJSON","slice","style","height","rows","src","alt","controls","_Fragment","hidden","ref","_event$target","_event$target$files","files","file","name","URL","createObjectURL","onPostImage","accept","onClick","current","click","VIDEO_FORMATS","fileName","spilltedFileName","split","fileFormat","length","includes","toLowerCase","message","isError","arguments","undefined","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","transition","Bounce","NOTIFICATION_TYPES","GROUP","STATUS","APPROVED","REQUESTED","REJECTED","capitalizeParagraph","paragraph","map","sentence","index","charAt","toUpperCase","join","props"],"sourceRoot":""}