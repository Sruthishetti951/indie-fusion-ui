{"version":3,"file":"static/js/300.a8a23c97.chunk.js","mappings":"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","sources":["webpack://indie-fusion-ui/./src/ResetPassword/ResetPassword.module.css?7ce2","ResetPassword/ResetPassword.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResetPassword_container__BFr3i\",\"login-card\":\"ResetPassword_login-card__+4gVh\",\"input-box\":\"ResetPassword_input-box__Y0vQU\",\"btn-color\":\"ResetPassword_btn-color__Ygugl\"};","import { Fragment, useState } from \"react\";\nimport styles from './ResetPassword.module.css'\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { API_URL } from \"../appConfig\";\n\nfunction ResetPassword() {\n\n    const defaultValues = {\n        \"oldPassword\": \"\",\n        \"newPassword\": \"\",\n        \"confirmPassword\": \"\"\n    }\n    const { register, formState: { errors }, handleSubmit, reset } = useForm({\n        mode: \"onChange\",\n        defaultValues: defaultValues\n    });\n\n    const [resetPasswordStatus, setResetPasswordStatus] = useState({\n        isLoading: false,\n        errorMessage: '',\n        successMessage: ''\n    })\n\n    const resetPasswordSubmitHandler = async (data) => {\n        setResetPasswordStatus({\n            isLoading: true,\n            errorMessage: '',\n            successMessage: ''\n        })\n        const userId = localStorage.getItem(\"USER_ID\");\n        try {\n            const response = await axios.post(`${API_URL}/reset-password/${userId}`, data)\n            if (response.data.data) {\n                setResetPasswordStatus({\n                    isLoading: false,\n                    errorMessage: '',\n                    successMessage: 'Password reset successfull'\n                });\n                reset();\n            } else {\n                setResetPasswordStatus({\n                    isLoading: false,\n                    errorMessage: response.data.success,\n                    successMessage: ''\n                })\n            }\n\n        } catch (e) {\n            if (e?.response?.status === 404) {\n\n                setResetPasswordStatus({\n                    isLoading: false,\n                    errorMessage: 'Invalid credentials... Please try again',\n                    successMessage: ''\n                })\n            } else {\n                setResetPasswordStatus({\n                    isLoading: false,\n                    errorMessage: 'Something went wrong... Please try again',\n                    successMessage: ''\n                })\n            }\n        }\n\n    }\n\n\n    return (\n        <Fragment>\n\n            <form onSubmit={handleSubmit(resetPasswordSubmitHandler)}>\n                <div className={`${styles[\"container\"]}`}>\n                    <div className={`d-flex justify-content-center card  ${styles[\"login-card\"]}`}>\n                        <div>\n                            <div className='d-flex justify-content-around mb-5'>\n                                <h4>Reset Password</h4>\n                            </div>\n                            {(resetPasswordStatus.errorMessage || resetPasswordStatus.successMessage) && <div className={`alert ${resetPasswordStatus.errorMessage ? 'alert-danger' : 'alert-success'}  alert-dismissible fade show`} role=\"alert\">\n                                {resetPasswordStatus.errorMessage}\n                                {resetPasswordStatus.successMessage}\n                            </div>}\n                            <div>\n                                <div>\n                                    <label htmlFor=\"oldPass\" >Old Password</label>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"password\" id=\"oldPass\" className={styles[\"input-box\"]}\n                                        {\n                                        ...register('oldPassword', {\n                                            required: 'Old password is required'\n                                        },)\n                                        } />\n                                    <p className=\"text-danger\">{errors.oldPassword && errors.oldPassword.message}</p>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"newPass\" >New Password</label>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"password\" id=\"newPass\" className={styles[\"input-box\"]}\n                                        {\n                                        ...register('newPassword', {\n                                            required: 'New password is required'\n                                        },)\n                                        } />\n                                    <p className=\"text-danger\">{errors.newPassword && errors.newPassword.message}</p>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"confirmPass\" >Confirm Password</label>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"password\" id=\"confirmPass\" className={styles[\"input-box\"]}\n                                        {\n                                        ...register('confirmPassword', {\n                                            required: 'Confirm password is required'\n                                        },)\n                                        } />\n                                    <p className=\"text-danger\">{errors.confirmPassword && errors.confirmPassword.message}</p>\n                                </div>\n                                <div className='text-center'>\n                                    <button type=\"submit\" className={`btn btn-primary ${styles[\"btn-color\"]}`} disabled={resetPasswordStatus.isLoading}>{resetPasswordStatus.isLoading ? 'Loading...' : 'Reset Password'}</button>\n                                </div>\n                                <div className=\"d-flex justify-content-center\">\n                                    <i className=\"fa fa-long-arrow-left mt-1\" aria-hidden=\"true\"></i>\n                                    <p className=\"fontSize\"><Link to={'/dashboard'}>Back to Home</Link></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default ResetPassword"],"names":["register","formState","errors","handleSubmit","reset","useForm","mode","defaultValues","resetPasswordStatus","setResetPasswordStatus","useState","isLoading","errorMessage","successMessage","_jsx","Fragment","children","onSubmit","async","userId","localStorage","getItem","response","axios","post","API_URL","data","success","e","_e$response","status","className","styles","_jsxs","role","htmlFor","type","id","required","oldPassword","message","newPassword","confirmPassword","disabled","Link","to"],"sourceRoot":""}